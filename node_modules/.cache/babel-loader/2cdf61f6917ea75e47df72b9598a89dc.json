{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/karthikeyan.b15/Personal/Quiz/BKQuiz/pages/index.tsx\";\nimport * as React from 'react';\nimport Link from 'next/link';\nimport { QuizContext } from '../GlobalContext/context';\nimport styled from 'styled-components';\nvar IconLoading =\n/*#__PURE__*/\nstyled.div.withConfig({\n  displayName: \"pages__IconLoading\",\n  componentId: \"sc-1ltsz6q-0\"\n})([\"font-size:20vw;\"]);\n\nvar QuizDescription =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QuizDescription, _React$Component);\n\n  function QuizDescription() {\n    _classCallCheck(this, QuizDescription);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuizDescription).apply(this, arguments));\n  }\n\n  _createClass(QuizDescription, [{\n    key: \"render\",\n    value: function render() {\n      var quiz = this.props.quiz;\n      var image = quiz.image;\n\n      var htmlDescription = function htmlDescription() {\n        return {\n          __html: quiz.introduction\n        };\n      };\n\n      return React.createElement(\"section\", {\n        className: \"overviewSection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image.filePath,\n        alt: image.altText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"description\",\n        dangerouslySetInnerHTML: htmlDescription(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.showQuizQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Begin\"));\n    }\n  }]);\n\n  return QuizDescription;\n}(React.Component);\n\nvar Quizinator =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Quizinator, _React$Component2);\n\n  function Quizinator() {\n    _classCallCheck(this, Quizinator);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Quizinator).apply(this, arguments));\n  }\n\n  _createClass(Quizinator, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var quiz = this.props.quiz,\n          question = this.props.quiz.questions[this.props.currentQuestionIndex],\n          htmlQuestion = function htmlQuestion() {\n        return {\n          __html: question.question\n        };\n      },\n          answerButtons = question.answers.map(function (answer, i) {\n        return React.createElement(\"p\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: answer.answer,\n          onClick: _this.handleClick.bind(_this, i),\n          disabled: _this.props.buttonsDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, answer));\n      });\n\n      return React.createElement(\"section\", {\n        className: 'quizSection' + (this.props.buttonsDisabled ? ' transitionOut' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"questionNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Question \", this.props.currentQuestionIndex + 1, \" / \", quiz.questions.length), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        dangerouslySetInnerHTML: htmlQuestion(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"answers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, answerButtons));\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(index, event) {\n      var question = this.props.quiz.questions[this.props.currentQuestionIndex],\n          answer = {\n        value: index + 1,\n        isCorrect: index + 1 === question.correct\n      },\n          target = event.currentTarget;\n      this.props.submitAnswer(answer);\n      target.classList.add('clicked', answer.isCorrect ? 'correct' : 'incorrect');\n      window.setTimeout(function () {\n        target.classList.remove('clicked', 'correct', 'incorrect');\n      }, this.props.transitionDelay);\n    }\n  }]);\n\n  return Quizinator;\n}(React.Component);\n\nvar QuizResults =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(QuizResults, _React$Component3);\n\n  function QuizResults() {\n    _classCallCheck(this, QuizResults);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QuizResults).apply(this, arguments));\n  }\n\n  _createClass(QuizResults, [{\n    key: \"render\",\n    value: function render() {\n      var badgeStyle = {\n        backgroundImage: \"url(\".concat(this.props.thumbnail.filePath, \")\"),\n        width: this.props.thumbnail.height,\n        height: this.props.thumbnail.height,\n        lineHeight: this.props.thumbnail.height + 'px'\n      };\n      var numCorrect = 0,\n          score = 0,\n          possibleScore = 0;\n      this.props.results.forEach(function (answer) {\n        if (!!answer.isCorrect) {\n          numCorrect += 1;\n          score += (answer.level || 1) * 10;\n        }\n\n        possibleScore += (answer.level || 1) * 10;\n      });\n      var results = this.props.results.map(function (item, i) {\n        var questionHtml = function questionHtml() {\n          return {\n            __html: item.question\n          };\n        };\n\n        var explanationHtml = function explanationHtml() {\n          return {\n            __html: item.explanation\n          };\n        };\n\n        var response = item.isCorrect === true ? \"You correctly answered \" : item.isCorrect === false ? \"You answered \".concat(item.answers[item.value - 1], \". The correct answer is \") : \"The correct answer is \";\n        return React.createElement(\"li\", {\n          className: \"result\" + (item.isCorrect ? \" correct\" : \" incorrect\"),\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"question\",\n          dangerouslySetInnerHTML: questionHtml(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"response\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, response, \" \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, item.answers[item.correct - 1])), React.createElement(\"p\", {\n          className: \"explanation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          dangerouslySetInnerHTML: explanationHtml(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"section\", {\n        className: \"resultsSection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Results\"), React.createElement(\"div\", {\n        className: \"scoring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"You got \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, numCorrect), \" correct scoring a total of \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, score), \" out of a possible \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, possibleScore), \".\"), React.createElement(\"div\", {\n        className: \"badge\",\n        style: badgeStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, score), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, results));\n    }\n  }]);\n\n  return QuizResults;\n}(React.Component);\n\nfunction Home() {\n  var data = React.useContext(QuizContext);\n  console.log(data);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Home Page!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Following quiz provides Multiple Choice Questions (MCQs) related to Javascript Framework. You will have to read all the given answers and click over the correct answer. If you are not sure about the answer then you can check the answer using Show Answer button. You can use Next Quiz button to check new set of questions in the quiz.\"), React.createElement(Link, {\n    href: \"/Quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \" Get Start \"));\n}\n\nexport { Home };\nexport default Home;","map":{"version":3,"sources":["/Users/karthikeyan.b15/Personal/Quiz/BKQuiz/pages/index.tsx"],"names":["React","Link","QuizContext","styled","IconLoading","div","QuizDescription","quiz","props","image","htmlDescription","__html","introduction","filePath","altText","showQuizQuestion","Component","Quizinator","question","questions","currentQuestionIndex","htmlQuestion","answerButtons","answers","map","answer","i","handleClick","bind","buttonsDisabled","length","index","event","value","isCorrect","correct","target","currentTarget","submitAnswer","classList","add","window","setTimeout","remove","transitionDelay","QuizResults","badgeStyle","backgroundImage","thumbnail","width","height","lineHeight","numCorrect","score","possibleScore","results","forEach","level","item","questionHtml","explanationHtml","explanation","response","Home","data","useContext","console","log"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport Link from 'next/link'\nimport {QuizContext} from '../GlobalContext/context'\nimport styled from 'styled-components'\n\nconst IconLoading = styled.div`\n  font-size: 20vw;\n`\nclass QuizDescription extends React.Component {\n    render() {\n        let quiz = this.props.quiz;\n        let image = quiz.image;\n        let htmlDescription = function () { return { __html: quiz.introduction }; };\n\n        return (\n            <section className=\"overviewSection\">\n                <div className=\"imageWrapper\">\n                    <img src={image.filePath} alt={image.altText} />\n                </div>\n                <div className=\"description\" dangerouslySetInnerHTML={htmlDescription()} />\n                <button onClick={this.props.showQuizQuestion}>Begin</button>\n            </section>\n        );\n    };\n}\n\nclass Quizinator extends React.Component {\n    render() {\n        let quiz = this.props.quiz,\n            question = this.props.quiz.questions[this.props.currentQuestionIndex],\n            htmlQuestion = function () {\n                return { __html: question.question };\n            },\n            answerButtons = question.answers.map((answer, i) =>\n                <p key={i}><button className={answer.answer} onClick={this.handleClick.bind(this, i)} disabled={this.props.buttonsDisabled}>{answer}</button></p>\n        );\n\n        return (\n            <section className={'quizSection' + (this.props.buttonsDisabled ? ' transitionOut' : '')}>\n                <div className=\"questionNumber\">Question {this.props.currentQuestionIndex + 1} / {quiz.questions.length}</div>\n                <hr />\n                <div className=\"question\">\n                    <div dangerouslySetInnerHTML={htmlQuestion()} />\n                </div>\n                <div className=\"answers\">\n                    {answerButtons}\n                </div>\n            </section>\n        );\n    }\n\n    handleClick(index, event) {\n        let question = this.props.quiz.questions[this.props.currentQuestionIndex],\n            answer = { value: index + 1, isCorrect: (index + 1 === question.correct) },\n            target = event.currentTarget;\n\n        this.props.submitAnswer(answer);\n\n        target.classList.add('clicked', answer.isCorrect ? 'correct' : 'incorrect');\n\n        window.setTimeout(function () {\n            target.classList.remove('clicked', 'correct', 'incorrect');\n        }, this.props.transitionDelay);\n    }\n}\n\nclass QuizResults extends React.Component {\n    render() {\n        const badgeStyle = {\n            backgroundImage: `url(${this.props.thumbnail.filePath})`,\n            width: this.props.thumbnail.height,\n            height: this.props.thumbnail.height,\n            lineHeight: this.props.thumbnail.height + 'px'\n        };\n        \n        let numCorrect = 0, score = 0, possibleScore = 0;\n\n        this.props.results.forEach((answer) => {\n            if (!!answer.isCorrect) {\n                numCorrect += 1;\n                score += ((answer.level || 1) * 10);\n            }\n            possibleScore += ((answer.level || 1) * 10);\n        });\n        \n        const results = this.props.results.map((item, i) => {\n            let questionHtml = function () { return { __html: item.question }; };\n            let explanationHtml = function () { return { __html: item.explanation }; };\n            let response =\n                (item.isCorrect === true) ?\n                    \"You correctly answered \" :\n                (item.isCorrect === false) ? \n                    `You answered ${item.answers[item.value - 1]}. The correct answer is ` :\n                    \"The correct answer is \";\n\n            return (\n                <li className={\"result\" + (item.isCorrect ? \" correct\" : \" incorrect\")} key={i}>\n                    <div className=\"question\" dangerouslySetInnerHTML={questionHtml()} />\n                    <div className=\"response\">\n                        {response} <b>{item.answers[item.correct - 1]}</b>\n                    </div>\n                    <p className=\"explanation\">\n                        <i dangerouslySetInnerHTML={explanationHtml()} />\n                    </p>\n                </li>\n            );\n        });\n\n        return (\n            <section className=\"resultsSection\">\n                <h2>Results</h2>\n                <div className=\"scoring\">\n                    You got <em>{numCorrect}</em> correct scoring a total of <b>{score}</b> out of a possible <b>{possibleScore}</b>.\n                </div>\n                <div className=\"badge\" style={badgeStyle}>{score}</div>\n                <ol>{results}</ol>\n            </section>\n        );\n    }\n}\n\n\nfunction Home() {\n  const data = React.useContext(QuizContext)\n  console.log(data)\n  return (\n    <main>\n        <h1>Home Page!</h1>\n        <p>Following quiz provides Multiple Choice Questions (MCQs) related to Javascript Framework. You will have to read all the given answers and click over the correct answer. If you are not sure about the answer then you can check the answer using Show Answer button. You can use Next Quiz button to check new set of questions in the quiz.</p>\n        <Link href=\"/Quiz\"> Get Start </Link>\n    </main>\n  )\n}\n\nexport { Home }\nexport default Home\n"]},"metadata":{},"sourceType":"module"}